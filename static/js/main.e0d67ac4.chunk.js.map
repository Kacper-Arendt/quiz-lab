{"version":3,"sources":["models/Enums.ts","components/firebase.ts","redux/hooks.ts","components/User/Helpers.tsx","models/MediaQueries.ts","redux/appSlice.ts","components/UI/Button.tsx","components/UI/ErrorMesage.tsx","components/UI/Form.tsx","components/UI/Input.tsx","components/UI/Link.tsx","components/UI/Spinner.tsx","components/UI/Wrapper.tsx","components/User/Register.tsx","components/User/UpdateUserTotalScore.ts","redux/user/userSlice.ts","components/User/UserLogin.tsx","images/avatarAvocado.svg","components/User/UserProfile.tsx","redux/game/gameSlice.ts","components/Game/ProgressBar.tsx","components/Game/Game.tsx","components/Question/useFetchQuestions.ts","components/Question/AddQuestion.tsx","components/Question/Questions.tsx","components/HomePage/Home.tsx","images/question-mark-background.jpg","components/UI/Menu/Burger.tsx","components/UI/Menu/Navigation.tsx","components/UI/Menu/Menu.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["AppStatus","Firebase","auth","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","generateUserDocument","GoogleAuthProvider","user","id","a","userRef","doc","get","exists","email","name","totalGames","pointsScored","set","console","error","getDocuments","path","collection","getUserDocument","userDocument","response","data","generateQuestionDocument","questionData","dbName","question","correctAnswer","answers","useAppDispatch","useDispatch","useAppSelector","useSelector","RedirectIfUserIsAuth","state","isAuth","to","size","device","mobileS","mobileM","tablet","laptop","laptopL","desktop","initialState","status","Idle","isMenuOpen","appSlice","createSlice","reducers","changeStatus","action","payload","setMessage","message","toggleMenu","actions","ButtonEl","styled","button","props","backgroundColor","Button","disabled","onClick","value","P","p","Error","FormEl","form","Form","onSubmit","onSubmitHandler","onChange","children","InputEl","input","Input","autoComplete","type","onBlur","placeholder","register","StyledLink","Link","LinkEl","Span","div","Spinner","Div","margin","Wrapper","H1","h1","schema","yup","shape","required","password","min","max","confirmPassword","oneOf","Register","dispatch","history","useHistory","useForm","resolver","yupResolver","mode","handleSubmit","formState","errors","isDirty","isValid","useState","setUser","errorMessage","setErrorMessage","updateField","e","target","createUserWithEmailAndPasswordHandler","Loading","createUserWithEmailAndPassword","createUser","uid","push","UpdateUserTotalScore","update","UserSlice","login","logout","UserLogin","formData","setFormData","setError","fetchedUser","setFetchedUser","useEffect","signInWithEmailAndPasswordHandler","preventDefault","signInWithEmailAndPassword","userLogin","userId","Profile","About","SingIn","UserProfile","logoutHandler","signOut","src","avatarAvocado","alt","GameSlice","startGame","reducer","prepare","questionRandomIds","questions","currentQuestion","score","updateCurrentQuestion","chosenAnswer","updateScore","setChosenAnswer","Bar","Progress","ProgressBar","progress","isChosen","Result","Game","game","setCorrectAnswer","setQuestions","fetchedQuestion","Questions","dataArr","forEach","AnswersArr","answer","parseFloat","useFetchQuestions","updateUserTotalScore","updatedTotalUserPoints","updatedTotalGames","submitAnswerHandler","setTimeout","selectedAnswerId","map","el","questionHandler","Answers","CorrectAnswers","nullable","AddQuestion","setQuestion","setAnswers","setQuestionHandler","currentTarget","addAnswersHandler","htmlFor","QuestionsEl","Question","SpinnerEl","loading","setLoading","fetchQuestions","MoveFromLeft","keyframes","Element","Home","rotate","Burger","isOpen","BurgerEl","setIsOpen","Nav","nav","Navigation","toggleMenuHandler","Menu","GlobalStyles","createGlobalStyle","background","App","onAuthStateChange","onAuthStateChanged","component","exact","store","configureStore","appReducer","userReducer","gameReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0d67ac4.chunk.js","sourcesContent":["export enum AppStatus {\n    Idle = 'IDLE',\n    Loading = 'LOADING',\n}\n\nexport enum Firebase {\n    Users = 'users',\n    Questions = 'questions',\n}","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport {Firebase as FirebaseEnum, IUser} from '../models/Models';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA5a5WuH6_DH2-7ZVYDh8twPp-LH4KwK5g\",\n    authDomain: \"quiz-lab-23749.firebaseapp.com\",\n    projectId: \"quiz-lab-23749\",\n    storageBucket: \"quiz-lab-23749.appspot.com\",\n    messagingSenderId: \"868035074179\",\n    appId: \"1:868035074179:web:dcc275bf573f5e801b63b6\"\n};\nexport default !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport const signInWithGoogle = () => {\n    auth.signInWithRedirect(provider);\n};\n\nconst checkIfIdExists = (dbName: string): string => {\n    const ref = firestore.collection(dbName).doc();\n    return ref.id;\n}\n\nexport const generateUserDocument = async (user: IUser, id: string) => {\n    if (!id) return;\n    const userRef = firestore.doc(`users/${id}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n        const {email, name, totalGames, pointsScored} = user;\n        try {\n            await userRef.set({\n                id,\n                email,\n                name,\n                totalGames,\n                pointsScored,\n            });\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n};\n\nexport const getDocuments = async (path: FirebaseEnum) => {\n    try {\n        return await firestore.collection(path).get();\n    } catch (error) {\n        console.error(\"Error fetching data\", error);\n    }\n};\n\nexport const getUserDocument = async (id: string) => {\n    try {\n        const userDocument = await firestore.doc(`users/${id}`).get();\n        const response = userDocument.data();\n        return response as IUser;\n    } catch (error) {\n        console.error(\"Error fetching user\", error);\n    }\n};\n\nexport const generateQuestionDocument = async (questionData: any) => {\n    if (!questionData) return;\n    const id = await checkIfIdExists('questions');\n    const userRef = firestore.doc(`questions/${id}`);\n    const {question, correctAnswer, answers} = questionData;\n    try {\n        await userRef.set({\n            id,\n            question,\n            answers,\n            correctAnswer,\n        });\n    } catch (error) {\n        console.error(\"Error creating question document\", error);\n    }\n};\n","import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\nimport type {RootState, AppDispatch} from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport {Redirect} from 'react-router';\nimport {useAppSelector} from '../../redux/hooks';\n\nexport const RedirectIfUserIsAuth = (path: string) => {\n    const {user} = useAppSelector(state => state);\n\n    if (user.isAuth === true) {\n        return <Redirect to={path}/>\n    }\n}","const size = {\n    mobileS: '320px',\n    mobileM: '375px',\n    tablet: '720px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '1920px',\n};\n\nexport const device: typeof size = {\n    mobileS: `(min-width: ${size.mobileS})`,\n    mobileM: `(min-width: ${size.mobileM})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    laptopL: `(min-width: ${size.laptopL})`,\n    desktop: `(min-width: ${size.desktop})`,\n};","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\n\nimport {IApp, AppStatus} from \"../models/Models\";\n\nconst initialState = {status: AppStatus.Idle, isMenuOpen: false} as IApp;\n\nexport const appSlice = createSlice({\n    name: 'app,',\n    initialState,\n    reducers: {\n        changeStatus(state, action: PayloadAction<AppStatus>) {\n            state.status = action.payload;\n        },\n        setMessage(state, action: PayloadAction<string>) {\n            state.message = action.payload;\n        },\n        toggleMenu(state) {\n            state.isMenuOpen = !state.isMenuOpen;\n        }\n    }\n})\n\nexport const {changeStatus, setMessage, toggleMenu} = appSlice.actions;\n\nexport default appSlice.reducer;","import React from 'react';\nimport styled from \"styled-components\";\n\ninterface IProps {\n    value?: string,\n    size?: string,\n    backgroundColor?: string,\n    disabled?: boolean,\n    onClick?: (e: React.SyntheticEvent) => void,\n}\n\nconst ButtonEl = styled.button<IProps>`\n  border: .2rem solid black;\n  border-radius: 2rem;\n  padding: .7rem 1rem;\n  margin: .8rem;\n  color: white;\n  font-size: ${(props: IProps) => props.size ? props.size : 'inherit'};\n  background-color: ${(props) => props.backgroundColor ? props.backgroundColor : 'green'};\n  letter-spacing: 1.2px;\n  font-weight: bold;\n  transition: all .3s;\n\n  :hover {\n    transform: scale(1.05);\n    -webkit-box-shadow: 0px 0px 10px 0px #000;\n    box-shadow: 0px 0px 10px 0px #000;\n  }\n\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    transform: scale(1);\n  }\n\n  :disabled {\n    background-color: grey;\n  }\n`\n\nexport const Button = (props: IProps) => {\n    return (\n        <ButtonEl\n            size={props.size}\n            disabled={props.disabled}\n            onClick={props.onClick}\n        >\n            {props.value}\n        </ButtonEl>\n    )\n}","import styled from \"styled-components\";\n\n const P = styled.p`\n    margin: 0 .2rem .2rem;\n    text-align: center;\n    line-height: 120%;\n`\n\nexport const Error = (props: { value: string | null}) => {\n    return (\n        <P>{props.value}</P>\n    )\n}","import React from 'react';\nimport styled from \"styled-components\";\n\ninterface IProps {\n    onSubmitHandler?: (e: React.SyntheticEvent) => void,\n    onChange?: (e: React.ChangeEvent<any>) => void,\n    children: React.ReactNode\n}\n\nconst FormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 75vw;\n  max-width: 35rem;\n  margin: 12vh auto;\n  padding: 2rem;\n  border: .3rem solid black;\n  border-radius: 2rem;\n  background-color: rgba(64, 64, 64, .8);\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n`\n\nexport const Form = (props: IProps) => {\n    return (\n        <FormEl onSubmit={props.onSubmitHandler} onChange={props.onChange}>\n            {props.children}\n        </FormEl>\n    )\n}","import React from 'react';\nimport styled from \"styled-components\";\n\ninterface IProps {\n    type: string,\n    id?: string,\n    name?: string,\n    value?: string,\n    placeholder?: string,\n    backgroundColor?: string,\n    autoComplete?: string,\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    onBlur?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n    register?: any\n}\n\nconst InputEl = styled.input<IProps>`\n  width: 90%;\n  max-width: 25rem;\n  margin: .8rem;\n  padding: 0.7rem;\n  border: .15rem solid black;\n  border-radius: 3rem;\n  font-size: inherit;\n  font-weight: 700;\n  letter-spacing: 1px;\n  cursor: pointer;\n  outline: none;\n  background-color: ${(props: IProps) => props.backgroundColor ? props.backgroundColor : 'white'};\n  transition: all 0.4s;\n\n  ::placeholder {\n    color: rgba(0, 0, 0, .6);\n  }\n\n  :hover, :focus {\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px;\n    transform: scale(1.02);\n  }\n\n  :focus {\n    transform: scale(1.05);\n    background-color: aqua;\n    border: .2rem solid orange;\n  }\n`\n\nexport const Input = (props: IProps) => {\n    return (\n        <>\n            <InputEl\n                autoComplete={props.autoComplete}\n                type={props.type}\n                id={props.id}\n                name={props.name}\n                value={props.value}\n                onBlur={props.onChange}\n                placeholder={props.placeholder}\n                backgroundColor={props.backgroundColor}\n                {...props.register}\n                onChange={props.onChange}\n\n            />\n        </>\n    )\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface IProps {\n    to: string,\n    value: string,\n}\n\nconst StyledLink = styled(Link)`\n  margin-top: 1rem;\n  padding: 0.3rem;\n  font-size: 1.3rem;\n  color: white;\n  text-decoration: none;\n  transition: all .4s;\n\n  :hover {\n    transform: scaleX(1.1);\n    color: #888;\n  }\n`\n\nexport const LinkEl = (props: IProps) => {\n    return (\n        <StyledLink to={props.to}>{props.value}</StyledLink>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n    size?: string,\n}\n\nconst Span = styled.div<IProps>`\n  display: inline-block;\n\n  :after {\n    content: \" \";\n    display: block;\n    width: ${(props: IProps) => props.size ? props.size + 'rem' : '3rem'};\n    height: ${(props: IProps) => props.size ? props.size + 'rem' : '3rem'};\n    margin: .5rem;\n    border-radius: 50%;\n    border: .5rem solid orange;\n    border-color: orange transparent orange transparent;\n    animation: lds-dual-ring .7s linear infinite;\n  }\n\n  @keyframes lds-dual-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport const Spinner = (props: IProps): JSX.Element => {\n    return (\n        <Span size={props.size}></Span>\n    );\n}","import React from 'react';\nimport styled from \"styled-components\";\n\nimport {device} from '../../models/MediaQueries';\n\nexport const Div = styled.div<IProps>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: ${(props: IProps) => props.margin ? props.margin : '10vh 0 0'};\n\n@media${device.laptop} {\n  flex-direction: row;\n}\n`\n\ninterface IProps {\n    margin?: string\n    children: JSX.Element | JSX.Element[]\n}\n\nexport const Wrapper = (props: IProps) => {\n    return (\n        <Div margin={props.margin}>\n            {props.children}\n        </Div>\n    )\n}","import React, {useState} from 'react';\nimport {auth, generateUserDocument} from '../firebase';\nimport {useHistory} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {useForm} from 'react-hook-form';\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport {RedirectIfUserIsAuth} from './Helpers';\nimport {useAppDispatch, useAppSelector} from '../../redux/hooks';\nimport {changeStatus} from '../../redux/appSlice';\nimport {Error, LinkEl as Link, Spinner, Input, Form, Button} from '../UI/UIComponents';\nimport {AppStatus, INewUser} from '../../models/Models';\n\nconst H1 = styled.h1`\n  margin-bottom: 1rem;\n  font-size: 2.4rem;\n`;\n\nconst schema = yup.object().shape({\n    email: yup.string().email().required('Email is Required'),\n    password: yup.string().min(5, 'Password should be at least 5 characters').max(15),\n    confirmPassword: yup.string().oneOf([yup.ref('password'), null]),\n    name: yup.string().min(3,'Name should be at least 3 characters').max(12, 'Too long').required('Name is Required'),\n})\n\nexport const Register = (): JSX.Element => {\n    const dispatch = useAppDispatch();\n    const {app} = useAppSelector(state => state);\n    const history = useHistory();\n    const {register, handleSubmit, formState: {errors, isDirty, isValid}} = useForm({\n        resolver: yupResolver(schema),\n        mode: \"onBlur\"\n    });\n    const [user, setUser] = useState<INewUser>({\n        id: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        name: '',\n        totalGames: 0,\n        pointsScored: 0\n    });\n    const [errorMessage, setErrorMessage] = useState<string>('');\n\n    const updateField = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const createUserWithEmailAndPasswordHandler =\n        async () => {\n            dispatch(changeStatus(AppStatus.Loading))\n            try {\n                const createUser = await auth.createUserWithEmailAndPassword(user.email, user.password);\n                if (createUser.user) {\n                    const id = createUser.user.uid;\n                    setUser({\n                        ...user,\n                        id: id,\n                    })\n                    await generateUserDocument(user, id);\n                    history.push('/login');\n                }\n            } catch (error) {\n                dispatch(changeStatus(AppStatus.Idle))\n                setErrorMessage(error.message);\n            }\n            dispatch(changeStatus(AppStatus.Idle))\n            setUser({\n                id: '',\n                email: '',\n                password: '',\n                confirmPassword: '',\n                name: '',\n                totalGames: 0,\n                pointsScored: 0,\n            })\n        };\n\n    return (\n        <>\n            {RedirectIfUserIsAuth('/user')}\n            <Form onSubmitHandler={handleSubmit(createUserWithEmailAndPasswordHandler)}>\n                <H1>Register</H1>\n                <Error value={errorMessage && errorMessage}/>\n                <Input\n                    type='email'\n                    name='email'\n                    value={user.email}\n                    autoComplete=\"new-password\"\n                    placeholder='Email...'\n                    register={{...register('email', {required: true})}}\n                    onChange={updateField}\n                />\n                {errors.email && <Error value={errors.email.message} />}\n                <Input\n                    type='password'\n                    name='password'\n                    value={user.password}\n                    placeholder='Password...'\n                    register={{...register('password', {required: true})}}\n                    onChange={updateField}\n                />\n                {errors.password && <Error value={errors.password.message} />}\n                <Input\n                    type='password'\n                    name='confirmPassword'\n                    value={user.confirmPassword}\n                    placeholder='Confirm Password...'\n                    register={{...register('confirmPassword', {required: true})}}\n                    onChange={updateField}\n                />\n                {errors.confirmPassword &&  <Error value={errors.confirmPassword.message}/>}\n                <Input\n                    type='text'\n                    name='name'\n                    value={user.name}\n                    autoComplete=\"new-password\"\n                    placeholder='Name...'\n                    register={{...register('name', {required: true})}}\n                    onChange={updateField}\n                />\n                {errors.name && <Error value={errors.name.message}/>}\n                {app.status === AppStatus.Loading ?\n                    <Spinner/>\n                    :\n                    <Button\n                        value='Submit'\n                        size='1.3rem'\n                        disabled={!isValid || !isDirty}\n                    />\n                }\n                <Link to='/login' value='Already have an account?'></Link>\n            </Form>\n        </>\n    )\n}\n","import {firestore} from '../firebase';\n\nexport const UpdateUserTotalScore = async (id: string, totalGames: number, pointsScored: number) => {\n    const userRef = firestore.doc(`users/${id}`);\n    const snapshot = await userRef.get();\n    if (snapshot.exists) {\n        try {\n            await userRef.update({totalGames, pointsScored});\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n};\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nimport {IUser} from \"../../models/Models\";\n\nconst initialState = {id: '', name: '', email: '', totalGames: 0, pointsScored: 0} as IUser;\n\nexport const UserSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        login(state: IUser, action: PayloadAction<IUser>) {\n            return action.payload;\n        },\n        logout(state: IUser) {\n            return initialState;\n        },\n        isAuth(state, action: PayloadAction<boolean>) {\n            state.isAuth = action.payload;\n        }\n    },\n});\n\nexport const {login, logout, isAuth} = UserSlice.actions;\n\nexport default UserSlice.reducer;","import React, {useEffect, useState} from 'react';\n\nimport {auth, getUserDocument} from '../firebase';\nimport {useAppDispatch, useAppSelector} from '../../redux/hooks';\nimport {login} from '../../redux/user/userSlice';\nimport {RedirectIfUserIsAuth} from './UserComponets';\nimport {changeStatus} from '../../redux/appSlice';\nimport {LinkEl as Link, Spinner, Form, Input, Button, Error} from '../UI/UIComponents';\nimport {AppStatus, IUser} from '../../models/Models';\n\nexport const UserLogin = (): JSX.Element => {\n    const dispatch = useAppDispatch();\n    const {app} = useAppSelector(state => state);\n    const [formData, setFormData] = useState({email: '', password: ''});\n    const [error, setError] = useState('');\n    const [fetchedUser, setFetchedUser] = useState({\n        id: '',\n        name: '',\n        email: '',\n        isAuth: false,\n    });\n\n    useEffect(() => {\n        dispatch(login(fetchedUser as IUser));\n    }, [fetchedUser, dispatch])\n\n    const updateField = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const signInWithEmailAndPasswordHandler = async (e: React.SyntheticEvent) => {\n        e.preventDefault();\n            try {\n            dispatch(changeStatus(AppStatus.Loading))\n            const userLogin = await auth.signInWithEmailAndPassword(formData.email, formData.password);\n            if (userLogin.user) {\n                const userId = userLogin.user.uid;\n                const response = await getUserDocument(userId);\n                if (response) {\n                    setFetchedUser({\n                        id: response.id,\n                        email: response.email,\n                        name: response.name,\n                        isAuth: true,\n                    })\n                }\n            }\n            dispatch(changeStatus(AppStatus.Idle))\n        } catch\n            (error) {\n            setError(error.message);\n            dispatch(changeStatus(AppStatus.Idle))\n        }\n        setFormData({\n            email: '',\n            password: ''\n        })\n    };\n    return (\n        <>\n            {RedirectIfUserIsAuth('/user')}\n            <Form onSubmitHandler={signInWithEmailAndPasswordHandler}>\n                <h1>Login</h1>\n                <Error value={error && error}/>\n                <Input\n                    type='email'\n                    name='email'\n                    value={formData.email}\n                    autoComplete=\"new-password\"\n                    placeholder='Email'\n                    onChange={updateField}\n                />\n                <Input\n                    type='password'\n                    name='password'\n                    value={formData.password}\n                    placeholder='Password'\n                    onChange={updateField}\n                />\n                {app.status === AppStatus.Loading ?\n                    <Spinner/>\n                    :\n                    <Button\n                        value='Submit'\n                        size='1.3rem'\n                    />\n                }\n                <Link to='/register' value='Create an account'></Link>\n            </Form>\n        </>\n    )\n}","export default __webpack_public_path__ + \"static/media/avatarAvocado.b9e21133.svg\";","import React from 'react';\nimport {useHistory} from 'react-router';\nimport styled from 'styled-components';\n\nimport {useAppDispatch, useAppSelector} from '../../redux/hooks';\nimport {logout} from '../../redux/user/userSlice';\nimport {auth} from '../firebase';\nimport avatarAvocado from '.././../images/avatarAvocado.svg'\nimport {Button} from '../UI/UIComponents';\nimport {device } from '../../models/Models';\n\nconst Profile = styled.div`\n  height: 100vh;\n  display: grid;\n  margin: 0 1.5rem;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 3fr 1fr;\n  justify-content: center;\n\n  button {\n    grid-row: 3;\n    align-self: flex-end;\n    margin-top: auto;\n    margin-bottom: 2rem;\n  }\n\n@media${device.tablet} {\n  button {\n    justify-self: center;\n    max-width: 30rem;\n  }\n}\n`\n\nconst About = styled.div`\n  width: 55vw;\n  min-width: 25rem;\n  margin: 10vh 1rem;\n  padding: 1rem;\n  justify-self: center;\n  border: .3rem solid orange;\n  background-color: rgba(0, 0, 0, .65);\n  font-size: 1.5rem;\n\n  p {\n    margin: .5rem;\n  }\n\n  img {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 11rem;\n    height: 11rem;\n    background-color: orange;\n    border-radius: 10rem;\n  }\n\n  span {\n    color: green;\n    font-weight: bold;\n  }\n}\n\n@media${device.tablet} {\n  max-width: 35rem;\n`\n\nconst SingIn = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n\n@media${device.tablet} {\n  font-size: 2rem;\n}\n`\nexport const UserProfile = () => {\n    const {user} = useAppSelector(state => state);\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n\n    const logoutHandler = async () => {\n        await auth.signOut();\n        dispatch(logout());\n        history.push('/login')\n    }\n    return (\n        <>\n            {user.id ?\n                <Profile>\n                    <About>\n                        <img src={avatarAvocado} alt=\"Avocado Avatar\"/>\n                        <p>Name: {user.name}</p>\n                        <p>Mail: {user.email} </p>\n                        <p>Total Games: <span>{user.totalGames}</span></p>\n                        <p>Points Scored: <span>{user.pointsScored}</span></p>\n                    </About>\n                    <Button\n                        onClick={logoutHandler}\n                        value='Sign out'\n                        size='1.5rem'/>\n                </Profile>\n                :\n                <SingIn>\n                    <h1>You're Not Logged In</h1>\n                    <Button\n                        onClick={() => history.push('/login')}\n                        value='Sign In'\n                        size='1.5rem'/>\n                </SingIn>\n            }\n        </>\n    )\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\nimport {IGame} from \"../../models/Models\";\n\nconst initialState = {} as IGame;\n\nexport const GameSlice = createSlice({\n    name: 'game',\n    initialState,\n    reducers: {\n        startGame: {\n            reducer: (state, action: PayloadAction<IGame>) => {\n                return action.payload\n            },\n            prepare: ({questionRandomIds, questions}) => ({\n                payload: {\n                    questionRandomIds,\n                    questions,\n                    currentQuestion: 0,\n                    score: 0,\n                } as IGame\n            })\n        },\n        updateCurrentQuestion(state): void {\n            state.currentQuestion = state.currentQuestion! + 1;\n            state.chosenAnswer = null;\n        },\n        updateScore(state): void {\n            state.score = state.score + 1\n        },\n        setChosenAnswer(state, action: PayloadAction<number>): void {\n            state.chosenAnswer = action.payload;\n        }\n    }\n});\n\nexport const {startGame, updateCurrentQuestion, updateScore, setChosenAnswer} = GameSlice.actions;\n\nexport default GameSlice.reducer;\n\n\n    ","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Iprops {\n    currentQuestion: number,\n}\n\nconst Bar = styled.div`\n  width: 100%;\n  background: white;\n  height: 1rem;\n  border-radius: 20rem;\n  margin: 0 0 1.5rem;\n\n`\nconst Progress = styled.div <Iprops>`\n  width: ${(props: Iprops) => props.currentQuestion && props.currentQuestion + '%'};\n  background: #84BF04;\n  height: 100%;\n  border-radius: 20rem;\n\n\n`\n\nexport const ProgressBar = (props: Iprops) => {\n    const progress = props.currentQuestion / 5 * 100;\n\n    return (\n        <>\n            <Bar>\n                <Progress currentQuestion={progress} />\n            </Bar>\n        </>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {useHistory} from 'react-router-dom';\n\nimport {setChosenAnswer, startGame, updateCurrentQuestion, updateScore} from '../../redux/game/gameSlice';\nimport {Button, Form, Spinner,} from '../UI/UIComponents';\nimport {AppStatus, Answer, Question} from '../../models/Models';\nimport {useAppDispatch, useAppSelector} from '../../redux/hooks';\nimport {useFetchQuestions} from '../Question/useFetchQuestions';\nimport {ProgressBar} from './ProgressBar';\nimport {UpdateUserTotalScore} from '../User/UserComponets';\nimport {changeStatus} from '../../redux/appSlice';\n\ninterface IProps {\n    isChosen: boolean;\n    correctAnswer: boolean;\n}\n\nconst Div = styled.data`\n  font-size: 1.2rem;\n  text-align: center;\n\n  h2 {\n    padding: 2 .rem;\n    margin: .5rem .2rem;\n  }\n`\n\nconst P = styled.p<IProps>`\n  width: 100%;\n  padding: .8rem .3rem;\n  border-radius: 2rem;\n  text-align: center;\n  margin: 2rem 0;\n  cursor: pointer;\n  background-color: ${(props) => props.isChosen && '#038C33'};\n  background-color: ${(props) => props.correctAnswer && '#05F240'};\n  border: ${(props) => props.correctAnswer ? '3px solid #37A63E' : '2px solid orange'};\n  font-weight: bold;\n  color: white;\n  transition: all 0.3s;\n  \n  :hover{\n    -webkit-box-shadow: 0px 0px 10px 0px #000;\n    box-shadow: 0px 0px 10px 0px #000;\n    transform: scale(1.03);\n  }\n  :active{\n    transform: scale(1);\n    box-shadow: none;\n    -webkit-box-shadow: none;\n  }\n`\n\nconst Result = styled.div`\n  margin: 1rem 1rem 0;\n  text-align: center;\n\n  h1 {\n    margin: .7rem;\n  }\n\n  h2 {\n    margin: 1rem;\n  }\n`\n\nexport const Game = () => {\n    const dispatch = useAppDispatch();\n    const {game, app, user} = useAppSelector(state => state);\n    const questionRandomIds: Array<number> = [];\n    const [correctAnswer, setCorrectAnswer] = useState<number | null>(null);\n    const questions: Array<Question> = useFetchQuestions();\n    const history = useHistory();\n\n    useEffect(() => {\n        updateUserTotalScore()\n    }, [game.score, game.currentQuestion]);\n\n    useEffect(() => {\n        dispatch(startGame({questionRandomIds, questions}))\n    }, [questions]);\n\n    const updateUserTotalScore = async () => {\n\n        if (game.currentQuestion === 5 && user.id.length > 2) {\n            dispatch(changeStatus(AppStatus.Loading));\n            const updatedTotalUserPoints = game.score + user.pointsScored;\n            const updatedTotalGames = user.totalGames + 1;\n            await UpdateUserTotalScore(user.id, updatedTotalGames, updatedTotalUserPoints);\n            dispatch(changeStatus(AppStatus.Idle));\n        }\n    }\n\n    const answeredQuestionHandler = (id: number): void => {\n        dispatch(setChosenAnswer(id))\n    };\n\n    const questionHandler = () => {\n        if (game.currentQuestion <= 4) {\n            if (game.questions) {\n                const currentQuestion: number = game.currentQuestion;\n                const selectedAnswerId: Answer[] = game.questions[currentQuestion].answers;\n\n                return (\n                    <>\n                        <ProgressBar currentQuestion={currentQuestion}/>\n                        <Div>\n                            <h2>{game.questions[currentQuestion].question}</h2>\n                            {selectedAnswerId.map(el => {\n                                return <P\n                                    key={el.id}\n                                    isChosen={el.id === game.chosenAnswer}\n                                    correctAnswer={el.id === correctAnswer}\n                                    onClick={() => answeredQuestionHandler(selectedAnswerId[el.id].id)}>\n                                    {game.questions[currentQuestion].answers[el.id].answer}\n                                </P>\n                            })}\n                        </Div>\n                        <Button onClick={submitAnswerHandler} value='Submit' size='1.5rem'/>\n                    </>\n                )\n            }\n        } else {\n            return (\n                <Result>\n                    <h1>{game.score}/{game.currentQuestion}</h1>\n                    {game.score > 2 ?\n                        (<h2>Awesome!</h2>) :\n                        (<h2>Dont Give Up!</h2>)\n                    }\n                    <Button value='Next Game' size='1.5rem' onClick={() => history.push('/game')}/>\n                </Result>\n            )\n        }\n    };\n\n    const submitAnswerHandler = (e: React.SyntheticEvent): void => {\n        e.preventDefault();\n        const currentQuestion: number = game.currentQuestion;\n        if (game.chosenAnswer === game.questions[currentQuestion].correctAnswer) {\n            dispatch(updateScore());\n        }\n        setCorrectAnswer(game.questions[currentQuestion].correctAnswer);\n        const nextQuestion = async () => {\n            dispatch(updateCurrentQuestion());\n            setCorrectAnswer(null);\n        }\n        setTimeout(nextQuestion, 800);\n    }\n    return (\n        <>\n            <Form>\n                {app.status === AppStatus.Idle ?\n                    (questionHandler())\n                    :\n                    <Spinner size='10'/>\n                }\n\n            </Form>\n\n        </>\n    )\n}\n","import {useEffect, useState} from 'react';\n\nimport {AppStatus, Firebase, Question} from '../../models/Models';\nimport {changeStatus} from '../../redux/appSlice';\nimport {useAppDispatch} from '../../redux/hooks';\nimport {getDocuments} from '../firebase';\n\nexport const useFetchQuestions = () => {\n    const [questions, setQuestions] = useState<Array<Question>>([]);\n    const dispatch = useAppDispatch();\n\n    const data = async () => {\n        const fetchedQuestion: Array<Question> = [];\n\n        const dataArr = await getDocuments(Firebase.Questions);\n        if (dataArr) {\n            dataArr.forEach(doc => {\n                const {id, answers, correctAnswer, question} = doc.data();\n                let AnswersArr: any = [];\n                AnswersArr.push({id: 0, answer: answers[0]}, {id: 1, answer: answers[1]}, {id: 2, answer: answers[2]});\n\n                fetchedQuestion.push({\n                    id,\n                    answers: AnswersArr,\n                    correctAnswer: parseFloat(correctAnswer),\n                    question,\n                });\n            })\n            setQuestions(fetchedQuestion);\n            dispatch(changeStatus(AppStatus.Idle))\n        }\n    }\n\n    useEffect(() => {\n        dispatch(changeStatus(AppStatus.Loading))\n        data();\n    }, []);\n\n    return questions;\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {useForm} from 'react-hook-form';\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport {changeStatus} from '../../redux/appSlice';\nimport {useAppDispatch, useAppSelector} from '../../redux/hooks';\nimport {generateQuestionDocument} from '../firebase';\nimport {Button, Form, Input, Spinner, Error} from '../UI/UIComponents';\nimport {AppStatus} from '../../models/Models';\n\nconst Answers = styled.div`\n  text-align: center;\n  width: 100%;\n`\n\nconst CorrectAnswers = styled(Answers)`\n  width: 75%;\n  padding: .7rem .5rem;\n  background-color: rgba(0, 0, 0, .65);\n  border-radius: 2rem;\n  margin: 1.5rem 0 1rem;\n\n  h2 {\n    color: green;\n  }\n\n  label {\n    display: flex;\n    justify-content: center;\n    margin: .7rem .5rem;\n  }\n\n  p {\n    margin: 0 .5rem;\n    font-weight: 600;\n  }\n`\nconst schema = yup.object().shape({\n    question: yup.string().min(5, 'Question should be at least 5 characters').max(100, 'Too long').required('Question is required'),\n    correctAnswer: yup.number().nullable().required('Correct Answer is required'),\n    0: yup.string().min(2, 'Minimum of 2 characters').max(35, 'Maximum of 35 characters').required('Answer is required'),\n    1: yup.string().min(2, 'Minimum of 2 characters').max(35, 'Maximum of 35 characters').required('Answer is required'),\n    2: yup.string().min(2, `Minimum of 2 characters`).max(35, 'Maximum of 35 characters').required('Answer is required'),\n});\n\nexport const AddQuestion = () => {\n    const dispatch = useAppDispatch();\n    const {app} = useAppSelector(state => state);\n    const {register, handleSubmit, formState: {errors, isDirty, isValid}} = useForm({\n        resolver: yupResolver(schema),\n        mode: \"onBlur\",\n    });\n    const choices = [{id: 0, value: 'Answer 1'}, {id: 1, value: 'Answer 2'}, {id: 2, value: 'Answer 3'}];\n    const [question, setQuestion] = useState<{ question: string, correctAnswer: number, answers: Array<object> }>();\n    const [answers, setAnswers] = useState<any[]>([]);\n    const [errorMessage, setErrorMessage] = useState<string>();\n\n    const setQuestionHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        setQuestion({\n            ...question!,\n            [e.currentTarget.name]: e.currentTarget.value,\n        });\n    };\n\n    const addAnswersHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        setAnswers({\n            ...answers,\n            [parseFloat(e.currentTarget.id)]: e.currentTarget.value\n        });\n        setQuestion({\n            ...question!,\n            answers: answers\n        });\n    }\n\n    const onSubmitHandler = async (e: React.SyntheticEvent) => {\n        dispatch(changeStatus(AppStatus.Loading))\n        try {\n            await generateQuestionDocument(question);\n        } catch (error) {\n            dispatch(changeStatus(AppStatus.Idle))\n            setErrorMessage(error.message);\n        }\n        dispatch(changeStatus(AppStatus.Idle))\n    }\n\n    return (\n        <>\n            <Form onSubmitHandler={handleSubmit(onSubmitHandler)}>\n                <h1>Add Question</h1>\n                <Input\n                    type='text'\n                    name=\"question\"\n                    autoComplete='off'\n                    register={{...register('question', {required: true})}}\n                    onChange={setQuestionHandler}\n                />\n                {errors.question && <Error value={errors.question.message}/>}\n                <Answers>\n                    <h2>Answers</h2>\n                    <Input\n                        type='text'\n                        id='0'\n                        key={0} name=\"0\"\n                        placeholder='1'\n                        autoComplete='off'\n                        register={{...register('0', {required: true})}}\n                        onChange={addAnswersHandler}\n                    />\n                    {errors[0] && <Error value={errors[0].message}/>}\n                    <Input\n                        type='text'\n                        id='1' key={1}\n                        name=\"1\"\n                        placeholder='2'\n                        autoComplete='off'\n                        register={{...register('1', {required: true})}}\n                        onChange={addAnswersHandler}\n                    />\n                    {errors[1] && <Error value={errors[1].message}/>}\n                    <Input\n                        type='text'\n                        id='2' key={2}\n                        name=\"2\"\n                        placeholder='3'\n                        autoComplete='off'\n                        register={{...register('2', {required: true})}}\n                        onChange={addAnswersHandler}\n                    />\n                    {errors[2] && <Error value={errors[2].message}/>}\n                </Answers>\n                <CorrectAnswers>\n                    <h2>Correct Answer </h2>\n                    {choices.map(el => {\n                        return (\n                            <label key={el.id} htmlFor={el.value}>\n                                <input\n                                    type=\"radio\"\n                                    value={el.id}\n                                    key={el.id}\n                                    id={el.value}\n                                    {...register('correctAnswer', {required: true})}\n                                    onChange={setQuestionHandler}\n                                />\n                                <p>{el.value}</p>\n                            </label>\n                        )\n                    })}\n                    {errors.correctAnswer && <Error value={errors.correctAnswer.message}/>}\n\n                </CorrectAnswers>\n                {app.status === AppStatus.Loading ?\n                    <Spinner/>\n                    :\n                    <Button\n                        value='Submit'\n                        size='1.5rem'\n                        disabled={!isValid || !isDirty}\n                    />\n                }\n            </Form>\n        </>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {getDocuments} from '../firebase';\nimport {Spinner, Wrapper} from '../UI/UIComponents';\nimport {Firebase, Question as questionModel} from '../../models/Models';\n\nconst QuestionsEl = styled.div`\n  width: 75vw;\n  max-width: 40rem;\n  margin-bottom: 5vh;\n`\n\nconst Question = styled.div`\n  margin: 1.5rem .5rem;\n  padding: 1rem .8rem;\n  background-color: rgba(0, 0, 0, .65);\n  text-align: center;\n  border-bottom: 2px solid orange;\n\n  h2 {\n    margin: 1rem .1rem;\n    color: green;\n  }\n`\n\nconst SpinnerEl = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const Questions = () => {\n    const [questions, setQuestions] = useState<Array<questionModel>>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        fetchQuestions();\n    }, []);\n\n    const fetchQuestions = async () => {\n        setLoading(true);\n        const data = await getDocuments(Firebase.Questions);\n        const fetchedQuestion: Array<questionModel> = []\n\n        if (data) {\n            data.forEach(doc => {\n                const {id, answers, correctAnswer, question} = doc.data();\n                let AnswersArr: any = []\n                AnswersArr.push({id: 0, answer: answers[0]}, {id: 1, answer: answers[1]}, {id: 2, answer: answers[2]})\n\n                fetchedQuestion.push({\n                    id,\n                    answers: AnswersArr,\n                    correctAnswer,\n                    question,\n                })\n            })\n            setQuestions(fetchedQuestion)\n        }\n        setLoading(false)\n    }\n\n    const showFetchedQuestion = () => {\n        return (\n            <Wrapper>\n                {loading ?\n                    (<SpinnerEl><Spinner size='10'/> </SpinnerEl>)\n                    :\n                    (\n                        <QuestionsEl>\n                            {questions.map(el =>\n                                <Question key={el.id}>\n                                    <h2>Q: {el.question}</h2>\n                                    <h3>{el.answers[el.correctAnswer].answer}</h3>\n                                </Question>\n                            )}\n                        </QuestionsEl>\n                    )\n                }\n            </Wrapper>\n        )\n    }\n\n    return (\n        <>\n            {showFetchedQuestion()}\n        </>\n    )\n}","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {useHistory} from 'react-router';\n\nimport {Wrapper} from '../UI/UIComponents';\nimport {device} from '../../models/Models';\n\nexport const MoveFromLeft = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateX(-15rem);\n    -webkit-filter: blur(0px);\n  }\n  50% {\n    -webkit-filter: blur(2px);\n  }\n  80% {\n    transform: translateX(1rem);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(0);\n    -webkit-filter: blur(0px);\n  }\n`\nconst Element = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem 0;\n  width: 50vw;\n  height: 50vw;\n  max-width: 25rem;\n  max-height: 25rem;\n  background-color: rgba(0, 0, 0, 0.65);\n  transition: all .2s;\n  animation-name: ${MoveFromLeft};\n  animation-duration: 1s;\n\n  :last-child {\n    animation-duration: 1.3s;\n  }\n\n\n  h1 {\n    margin-bottom: .7rem;\n    text-align: center;\n    font-size: 2.4rem;\n  }\n\n  :hover {\n    transform: scale(1.05);\n    -webkit-box-shadow: 0px 0px 10px 0px #000;\n    box-shadow: 0px 0px 10px 0px #000;\n  }\n\n  :active, :focus {\n    transform: scale(.98);\n    border: .4rem solid orange;\n  }\n\n@media${device.laptop} {\n  margin: 15vh 5vw;\n}\n`\n\n\nexport const Home = () => {\n    const history = useHistory();\n\n    return (\n        <Wrapper>\n\n            <Element onClick={() => history.push('/game')}>\n                <h1>Play</h1>\n            </Element>\n\n            <Element onClick={() => history.push('/user')}>\n                <h1>Profile</h1>\n            </Element>\n        </Wrapper>\n    )\n}","export default __webpack_public_path__ + \"static/media/question-mark-background.715c47a3.jpg\";","import React from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {device} from '../../../models/Models';\n\nconst rotate = keyframes`\n  0% {\n    transform: translateX(-20rem) rotate(-720deg);\n  }\n\n  to {\n    transform: translateX(0) rotate(0deg);\n  }\n`\n\nexport const Burger = styled.button<MenuIProps>`\n  position: fixed;\n  top: 5%;\n  left: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 101;\n  animation-name: ${rotate};\n  animation-duration: .5s;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 2rem;\n    height: .2rem;\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n    background-color: ${(props: MenuIProps) => props.isOpen ? 'black' : 'white'};\n\n    :first-child {\n      transform: ${(props: MenuIProps) => props.isOpen ? 'rotate(45deg) ' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${(props: MenuIProps) => props.isOpen ? '0' : '1'};\n      transform: ${(props: MenuIProps) => props.isOpen ? 'translateX(-20px) ' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${(props: MenuIProps) => props.isOpen ? 'rotate(-45deg) ' : 'rotate(0)'};\n    }\n  }\n\n@media${device.mobileM} {\n  width: 2.5rem;\n  height: 2.5rem;\n\n  div {\n    width: 2.5rem;\n    height: .25rem;\n  }\n} @media${device.tablet} {\n  width: 3rem;\n  height: 3rem;\n  left: 2rem;\n\n  div {\n    width: 3rem;\n    height: .3rem;\n  }\n} @media${device.laptopL} {\n  width: 4rem;\n  height: 4rem;\n  left: 3rem;\n\n  div {\n    width: 4rem;\n    height: .4rem;\n  }\n}\n`;\n\nexport interface MenuIProps {\n    isOpen: boolean,\n    setIsOpen?: () => void,\n    logout?: () => any,\n}\n\nexport const BurgerEl = (props: MenuIProps) => {\n    return (\n        <Burger isOpen={props.isOpen} onClick={props.setIsOpen}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </Burger>\n    )\n}","import styled from 'styled-components';\nimport {Link} from 'react-router-dom'\nimport {FaHome, FaPlayCircle, FaQuestionCircle, FaUserCircle, FaPowerOff, FaUserPlus} from 'react-icons/fa';\n\nimport {useAppDispatch, useAppSelector} from '../../../redux/hooks';\nimport {toggleMenu} from '../../../redux/appSlice';\nimport {logout} from '../../../redux/user/userSlice';\nimport {auth} from '../../firebase';\nimport {device} from '../../../models/Models';\n\ninterface IProps {\n    isOpen: boolean,\n}\n\nexport const Nav = styled.nav<IProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: orange;\n  height: 100%;\n  width: 100%;\n  text-align: left;\n  z-index: 100;\n  padding: 2rem;\n  position: fixed;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  transform: ${(props: IProps) => props.isOpen ? 'translateX(0)' : 'translateX(-100%)'};\n  font-size: 2rem;\n\n@media${device.tablet} {\n  font-size: 2.5rem;\n}\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 2rem 0;\n  margin: 0 auto;\n  text-align: center;\n  color: black;\n  font-weight: bold;\n  letter-spacing: 0.5rem;\n  text-decoration: none;\n  text-transform: uppercase;\n  transition: color 0.2s linear;\n  display: flex;\n\n  :last-child {\n    position: absolute;\n    bottom: 2rem;\n    align-self: center;\n  }\n\n  p {\n    margin-right: .8rem;\n  }\n\n  &:hover {\n    color: white;\n  }`\n\nexport const Navigation = () => {\n    const dispatch = useAppDispatch();\n    const {user, app} = useAppSelector(state => state);\n\n    const toggleMenuHandler = () => {\n        dispatch(toggleMenu());\n    }\n\n    const logoutHandler = async () => {\n        await auth.signOut();\n        dispatch(logout())\n        dispatch(toggleMenu())\n    }\n\n    return (\n        <Nav isOpen={app.isMenuOpen!}>\n            <StyledLink to='/' onClick={toggleMenuHandler}><p>Home</p> <FaHome/></StyledLink>\n            <StyledLink to='/game' onClick={toggleMenuHandler}><p>Game</p><FaPlayCircle/></StyledLink>\n            <StyledLink to='/user' onClick={toggleMenuHandler}><p>Profile</p><FaUserCircle/></StyledLink>\n            <StyledLink to='/questions' onClick={toggleMenuHandler}><p>Questions</p><FaQuestionCircle/></StyledLink>\n            {user.id.length > 3 ?\n                <StyledLink to='/home' onClick={logoutHandler}><p>Logout</p><FaPowerOff/></StyledLink>\n                :\n                <StyledLink to='/login' onClick={toggleMenuHandler}>Login <p><FaUserPlus/></p></StyledLink>\n            }\n        </Nav>\n\n    )\n}","import React from 'react';\nimport {toggleMenu} from '../../../redux/appSlice';\nimport {useAppDispatch, useAppSelector} from '../../../redux/hooks';\nimport {BurgerEl} from './Burger';\nimport {Navigation} from './Navigation';\n\nexport const Menu = () => {\n    const {app} = useAppSelector(state => state);\n    const dispatch = useAppDispatch();\n\n    return (\n        <div>\n            <BurgerEl isOpen={app.isMenuOpen!} setIsOpen={() => dispatch(toggleMenu())}/>\n            <Navigation />\n        </div>\n    )\n};","import {HashRouter as Router, Switch, Route} from \"react-router-dom\";\nimport React, {useEffect, useState} from 'react';\nimport {createGlobalStyle} from 'styled-components'\n\nimport {Register, UserLogin, UserProfile} from './components/User/UserComponets';\nimport {useAppDispatch, useAppSelector} from './redux/hooks';\nimport {auth, getUserDocument} from \"./components/firebase\";\nimport {login} from \"./redux/user/userSlice\";\nimport {Game} from \"./components/Game/Game\";\nimport {AddQuestion} from \"./components/Question/AddQuestion\";\nimport {Questions} from \"./components/Question/Questions\";\nimport {Home} from \"./components/HomePage/Home\";\nimport background from './images/question-mark-background.jpg'\nimport {Menu} from \"./components/UI/Menu/Menu\";\nimport {IUser, device} from './models/Models';\n\ninterface Iprops {\n    isMenuOpen: boolean,\n}\n\nconst GlobalStyles = createGlobalStyle<Iprops>`\n  *,\n  *::after,\n  *::before {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n\n  html {\n    font-size: 62.5%;\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    background: url(${background}) no-repeat center center fixed;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n\n  @media${device.mobileM} {\n    font-size: 71.25%;\n  } @media${device.tablet} {\n    font-size: 81.25%;\n  } @media${device.laptopL} {\n    font-size: 100%;\n  }\n  }\n\n  body {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n    letter-spacing: 1.5px;\n    color: white;\n    overflow: ${(props: Iprops) => props.isMenuOpen ? 'hidden' : 'visible'};\n  }\n`\n\nfunction App() {\n    const dispatch = useAppDispatch();\n    const {app} = useAppSelector(state => state);\n    const [fetchedUser, setFetchedUser] = useState({\n        id: '',\n        name: '',\n        email: '',\n        isAuth: false,\n        pointsScored: 0,\n        totalGames: 0\n    });\n\n    useEffect(() => {\n        onAuthStateChange();\n    }, []);\n\n    useEffect(() => {\n        dispatch(login(fetchedUser as IUser));\n    }, [fetchedUser, dispatch]);\n\n    const onAuthStateChange = () => {\n        return auth.onAuthStateChanged(async user => {\n            if (user) {\n                const response = await getUserDocument(user.uid);\n                if (response) {\n                    setFetchedUser({\n                        id: response.id,\n                        email: response.email,\n                        name: response.name,\n                        isAuth: true,\n                        pointsScored: response.pointsScored,\n                        totalGames: response.totalGames,\n                    });\n                }\n            }\n        });\n    };\n\n    return (\n        <>\n            <GlobalStyles isMenuOpen={app.isMenuOpen!}/>\n            <Router>\n                <Menu/>\n                <Switch>\n                    <Route path='/user' component={UserProfile}/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/login\" component={UserLogin}/>\n                    <Route exact path=\"/questions\" component={Questions}/>\n                    <Route exact path=\"/questions/add\" component={AddQuestion}/>\n                    <Route path='/game' component={Game}/>\n                    <Route path='/' component={Home}/>\n                </Switch>\n            </Router>\n        </>\n    )\n}\n\nexport default App;","import {configureStore, ThunkAction, Action} from '@reduxjs/toolkit';\n\nimport appReducer from './appSlice';\nimport userReducer from './user/userSlice';\nimport gameReducer from './game/gameSlice';\n\nexport const store = configureStore({\n    reducer: {\n        app: appReducer,\n        user: userReducer,\n        game: gameReducer,\n    },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\n    RootState,\n    unknown,\n    Action<string>>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store} from './redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}